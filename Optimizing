#一键测速
wget -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
chmod +x speedtest-cli
./speedtest-cli  or  python speedtest-cli

#京东云卸载
cd /etc/jcloudhids.py
./uninstall.py


#修改主机名
vi /etc/sysconfig/network
reboot
#卸载阿里云服务
wget http://update.aegis.aliyun.com/download/quartz_uninstall.sh
chmod +x quartz_uninstall.sh
./quartz_uninstall.sh
rm -f /usr/sbin/aliyun-service
rm -rf /usr/local/aegis
killall -9 aliyun-service > /dev/null 2>&1


#一键安装最新内核并开启 BBR 脚本

wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh
chmod +x bbr.sh
./bbr.sh


#libev版一键安装

wget --no-check-certificate -O shadowsocks-libev.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.sh
chmod +x shadowsocks-libev.sh
./shadowsocks-libev.sh 2>&1 | tee shadowsocks-libev.log
========================
#开启日志
以四合一版的安装为例，修改启动脚本 /etc/init.d/shadowsocks-libev，找到下面这一行
$DAEMON -u -c $CONF -f $PID_FILE
修改为
$DAEMON -uv -c $CONF -f $PID_FILE
然后保存该启动脚本，并执行以下命令：
/etc/init.d/shadowsocks-libev stop
/etc/init.d/shadowsocks-libev start
正常启动后， log 就会输出到 /var/log/messages 文件里了

yum install rng-tools.x86_64
rngd -r /dev/urandom





#python版一键安装

wget --no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh
chmod +x shadowsocks.sh
./shadowsocks.sh 2>&1 | tee shadowsocks.log

# 进程守护

wget https://github.com/xudbin/ip/raw/master/hsu.sh
chmod a+x hsu.sh 
echo "* * * * * root /root/hsu.sh >/dev/null 2>&1" >>/etc/crontab
/etc/init.d/crond restart





#优化
# ip
# centos 6
/etc/sysctl.conf
# max open files
fs.file-max = 51200
# max read buffer
net.core.rmem_max = 67108864
# max write buffer
net.core.wmem_max = 67108864
# default read buffer
net.core.rmem_default = 65536
# default write buffer
net.core.wmem_default = 65536
# max processor input queue
net.core.netdev_max_backlog = 4096
# max backlog
net.core.somaxconn = 4096

# resist SYN flood attacks
net.ipv4.tcp_syncookies = 1
# reuse timewait sockets when safe
net.ipv4.tcp_tw_reuse = 1
# turn off fast timewait sockets recycling
net.ipv4.tcp_tw_recycle = 0
# short FIN timeout
net.ipv4.tcp_fin_timeout = 30
# short keepalive time
net.ipv4.tcp_keepalive_time = 1200
# outbound port range
net.ipv4.ip_local_port_range = 10000 65000
# max SYN backlog
net.ipv4.tcp_max_syn_backlog = 4096
# max timewait sockets held by system simultaneously
net.ipv4.tcp_max_tw_buckets = 5000
# turn on TCP Fast Open on both client and server side
net.ipv4.tcp_fastopen = 3
# TCP receive buffer
net.ipv4.tcp_rmem = 4096 87380 67108864
# TCP write buffer
net.ipv4.tcp_wmem = 4096 65536 67108864
# turn on path MTU discovery
net.ipv4.tcp_mtu_probing = 1

sysctl -p


vi /etc/security/limits.conf
#添加
* soft nofile 51200
* hard nofile 51200


ulimit -n 51200

#查看当前文件打开连接数
#lsof（list open files）是一个列出当前系统打开文件的工具
yum install lsof
#一列为数量，第二列为进程号
lsof -n|awk '{print $2}'|sort|uniq -c |sort -nr|more

ps -ef|grep 进程号 




# 安全防护
yum install denyhosts 
service denyhosts start

/etc/hosts.deny 
/etc/denyhosts.conf

删除包含Love的行
sed -i '/Love/d' 1.txt


http://www.centoscn.com/shell/2015/0703/5781.html

# 时区更改
cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  
service rsyslog restart


屏蔽域名

# 添加屏蔽规则
iptables -I OUTPUT -m string --string "baidu.com" --algo bm -j DROP

# 删除屏蔽规则，上面添加的代码是什么样，那么删除的代码就是把 -I 改成 -D 
iptables -D OUTPUT -m string --string "baidu.com" --algo bm -j DROP


II. 解释

-I 是插入iptables规则；

-D 是删除对应的iptables规则；

-m string 是指定模块；

–string “baidu.com” 是指定要匹配的字符串（域名）；

–algo bm 是指定匹配字符串模式/算法；

-j DROP 是指匹配到数据包后处理方式，这里是丢弃数据包。

这个模块的作用就是匹配字符串，这个字符串可以是URL，也可以是普通文本，也可以是文件后缀，

比如： .zip ，就会把包含 .zip 的数据库丢弃，这样就会无法下载 .zip 类型的文件了。

其他的作用大家可以慢慢研究。https://www.ugeek.tk/linux-iptables

